
FROM registry.ci.openshift.org/openshift/release:rhel-9-release-golang-1.22-openshift-4.17 AS gobuilder

WORKDIR /src

COPY . .

RUN go version

RUN mkdir /tmp/out
#ENV GOPROXY=off
#ENV CGO_ENABLED=0

# TODO: check konflux-provided vars
ENV GOFLAGS="-mod=mod"
#ENV LDFLAGS="\
#-X istio.io/istio/pkg/version.buildVersion=${CI_ISTIO_UPSTREAM_VERSION_SANITIZED}-${CI_VERSION}.tp.1 \
#-X istio.io/istio/pkg/version.buildGitRevision=${CI_ISTIO_UPSTREAM_COMMIT} \
#-X istio.io/istio/pkg/version.buildTag=${CI_ISTIO_UPSTREAM_VERSION_SANITIZED}-${CI_VERSION}.tp.1 \
#-X istio.io/istio/pkg/version.buildStatus=Clean \
#-s -w"

RUN go build \
       -o /tmp/out ./pilot/cmd/pilot-discovery

RUN cp ./tools/packaging/common/envoy_bootstrap.json /tmp/out/envoy_bootstrap.json

###########################################################################
#@follow_tag(registry.redhat.io/ubi9/ubi-minimal:latest)
# TODO: why .access. ?
FROM registry.access.redhat.com/ubi9/ubi-minimal:latest 

# TODO: we should unify the format we use for versions, in render_vars.in we use a `v` prefix
ENV ISTIO_VERSION="1.22-konflux"

LABEL com.redhat.component="openshift-istio-pilot-container"
LABEL name="openshift-service-mesh/istio-pilot-rhel9"
LABEL version="${ISTIO_VERSION}.tp.1"
LABEL istio_version="${ISTIO_VERSION}-tp.1"
LABEL summary="Red Hat Service Mesh Pilot OpenShift container image"
LABEL description="Red Hat Service Mesh Pilot OpenShift container image"
LABEL io.k8s.display-name="Red Hat Service Mesh Pilot"
LABEL io.openshift.tags="istio"
LABEL maintainer="Istio Feedback <istio-feedback@redhat.com>"
LABEL io.openshift.expose-services="15003:tcp,15005:tcp,15007:tcp,15010:tcp,15011:tcp,8080:tcp,9093:tcp"

ENV container="oci"

#RUN microdnf update -y && microdnf install -y podman util-linux && microdnf clean all

RUN mkdir -p /var/lib/istio/envoy
RUN mkdir -p /etc/istio/proxy
RUN chmod g+w /etc/istio/proxy

COPY --from=gobuilder /tmp/out/envoy_bootstrap.json /var/lib/istio/envoy/envoy_bootstrap_tmpl.json
COPY --from=gobuilder /tmp/out/pilot-discovery /usr/local/bin

# Workaround for https://github.com/istio/istio/pull/5798
RUN ln -s /etc/pki/tls/cert.pem /cacert.pem

WORKDIR /tmp/

ENTRYPOINT [ "/usr/local/bin/pilot-discovery" ]
